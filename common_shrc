# If not running interactively, don't do anything
[ -z "$PS1" ] && return


# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac


# LANG
case "$TERM" in
    linux) LANG=C ;;
    *) LANG=ja_JP.UTF-8 ;;
esac
export LANG


# PATH
PATH="/usr/bin:/usr/sbin:/bin:/sbin"
MANPATH="/usr/share/man"
[ -d /usr/bin/X11 ] && PATH="$PATH:/usr/bin/X11"
[ -d /usr/games ] && PATH="$PATH:/usr/games"
[ -d /usr/X11 ] && PATH="$PATH:/usr/X11/bin" && MANPATH="$MANPATH:/usr/X11/man"
[ -d /usr/local/sbin ] && PATH="/usr/local/sbin:$PATH"
[ -d /usr/local/bin ] && PATH="/usr/local/bin:$PATH"
[ -d /usr/local/share/man ] && MANPATH="/usr/local/share/man:$MANPATH"
[ -d /usr/local/opt/coreutils/libexec/gnubin ] && PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
[ -d /usr/local/opt/coreutils/libexec/gnuman ] && MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
[ -d "$HOME/sbin" ] && PATH="$HOME/sbin:$PATH"
[ -d "$HOME/bin" ] && PATH="$HOME/bin:$PATH"
export PATH MANPATH


# EDITOR
if [ -x /usr/local/bin/vim ]; then
    EDITOR=/usr/local/bin/vim
    export EDITOR
elif [ -x /usr/bin/vim ]; then
    EDITOR=/usr/bin/vim
    export EDITOR
fi


# PAGER
# man とかを見るときはいつも less を使う。
if [ -x /usr/local/bin/less ]; then
    PAGER=/usr/local/bin/less
    export PAGER
elif [ -x /usr/bin/less ]; then
    PAGER=/usr/bin/less
    export PAGER
fi

# less
# ステータス行にファイル名と行数、いま何%かを表示するようにする。
export LESS='-R -X -i -P ?f%f:(stdin).  ?lb%lb?L/%L..  [?eEOF:?pb%pb\%..]'

# これを設定しないと日本語がでない less もあるので一応入れておく。
export JLESSCHARSET=japanese-ujis

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


# rbenv
if [ -s "${HOME}/.rbenv/bin" ]; then
    rbenv_root="${HOME}/.rbenv"
elif [ -s "/usr/local/rbenv" ]; then
    rbenv_root="/usr/local/rbenv"
elif [ -s "/usr/local/opt/rbenv" ]; then
    rbenv_root="/usr/local/opt/rbenv"
fi
if [ -n "$rbenv_root" ]; then
    if which rbenv > /dev/null 2>&1; then
        echo "......loading rbenv"
        export RBENV_ROOT="$rbenv_root"
        eval "$(rbenv init -)"
    fi
fi


# pyenv
if which pyenv > /dev/null 2>&1; then
    echo "......loading pyenv"
    eval "$(pyenv init -)";
    if which pyenv-virtualenv-init > /dev/null; then
        eval "$(pyenv virtualenv-init -)";
    fi
fi


# nodebrew
if [ `uname` = "Darwin" ]; then
    if which nodebrew > /dev/null 2>&1; then
        echo "......setting nodebrew"
        export NODEBREW_ROOT=/usr/local/var/nodebrew
    fi
fi
